{"ast":null,"code":"import store from '@/store';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport userRouter from './module/user';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/AboutView.vue')\n}, ...userRouter];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.auth) {\n    if (store.state.userModule.token) {\n      next();\n    } else {\n      router.replace({\n        name: 'login'\n      });\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["store","createRouter","createWebHistory","HomeView","userRouter","routes","path","name","component","router","history","process","env","BASE_URL","beforeEach","to","from","next","meta","auth","state","userModule","token","replace"],"sources":["/home/maruka/Projects/go-web/gvp-f/src/router/index.js"],"sourcesContent":["import store from '@/store';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport userRouter from './module/user';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue'),\n  },\n  ...userRouter,\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.auth) {\n    if (store.state.userModule.token) {\n      next();\n    } else {\n      router.replace({ name: 'login' });\n    }\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,eAAe;AAEtC,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAE,MAAM,MAAM,EAAC,+BAAgC,wBAAwB;AAClF,CAAC,EACD,GAAGJ,UAAU,CACd;AAED,MAAMK,MAAM,GAAGR,YAAY,CAAC;EAC1BS,OAAO,EAAER,gBAAgB,CAACS,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CR;AACF,CAAC,CAAC;AAEFI,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACG,IAAI,CAACC,IAAI,EAAE;IAChB,IAAInB,KAAK,CAACoB,KAAK,CAACC,UAAU,CAACC,KAAK,EAAE;MAChCL,IAAI,EAAE;IACR,CAAC,MAAM;MACLR,MAAM,CAACc,OAAO,CAAC;QAAEhB,IAAI,EAAE;MAAQ,CAAC,CAAC;IACnC;EACF;AACF,CAAC,CAAC;AAEF,eAAeE,MAAM"},"metadata":{},"sourceType":"module"}