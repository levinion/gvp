{"ast":null,"code":"import storageService from '@/service/storageService';\nimport { configProviderContextKey } from 'element-plus';\nconst userModule = {\n  namespaced: true,\n  state: {\n    token: storageService.get(storageService.USER_TOKEN),\n    userInfo: JSON.parse(storageService.get(storageService.USER_INFO))\n  },\n  mutations: {\n    SET_TOKEN(state, token) {\n      storageService.set(storageService.USER_TOKEN, token);\n      state.token = token;\n    },\n    SET_USERINFO(state, userInfo) {\n      storageService.set(storageService.USER_INFO, JSON.stringify(userInfo));\n      state.userInfo = userInfo;\n    }\n  },\n  actions: {\n    register(context, {\n      name,\n      telephone,\n      password\n    }) {\n      return new Promise((resolve, reject) => {\n        userService.register(this.user).then(res => {\n          context.commit.SET_TOKEN(res.data.data.token);\n          return userService.info();\n        }).then(response => {\n          this.SET_USERINFO(response.data.data.user);\n          this.$router.replace({\n            name: 'home'\n          });\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n  }\n};\nexport default {\n  ...userModule\n};","map":{"version":3,"names":["storageService","configProviderContextKey","userModule","namespaced","state","token","get","USER_TOKEN","userInfo","JSON","parse","USER_INFO","mutations","SET_TOKEN","set","SET_USERINFO","stringify","actions","register","context","name","telephone","password","Promise","resolve","reject","userService","user","then","res","commit","data","info","response","$router","replace","catch","error"],"sources":["/home/maruka/Projects/go-web/gvp-f/src/store/module/user.js"],"sourcesContent":["import storageService from '@/service/storageService';\nimport { configProviderContextKey } from 'element-plus';\n\nconst userModule = {\n  namespaced: true,\n  state: {\n    token: storageService.get(storageService.USER_TOKEN),\n    userInfo: JSON.parse(storageService.get(storageService.USER_INFO)),\n  },\n  mutations: {\n    SET_TOKEN(state, token) {\n      storageService.set(storageService.USER_TOKEN, token);\n      state.token = token;\n    },\n    SET_USERINFO(state, userInfo) {\n      storageService.set(storageService.USER_INFO, JSON.stringify(userInfo));\n      state.userInfo = userInfo;\n    },\n  },\n  actions: {\n    register(context,{name,telephone,password}) {\n      return new Promise((resolve, reject) => {\n        userService.register(this.user).then((res) => {\n          context.commit.SET_TOKEN(res.data.data.token);\n          return userService.info();\n        }).then((response) => {\n          this.SET_USERINFO(response.data.data.user);\n          this.$router.replace({ name: 'home' });\n        }).catch((error) => {\n          reject(error);\n        });\n      });\n    },\n  },\n};\n\nexport default {\n  ...userModule,\n};\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,0BAA0B;AACrD,SAASC,wBAAwB,QAAQ,cAAc;AAEvD,MAAMC,UAAU,GAAG;EACjBC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,KAAK,EAAEL,cAAc,CAACM,GAAG,CAACN,cAAc,CAACO,UAAU,CAAC;IACpDC,QAAQ,EAAEC,IAAI,CAACC,KAAK,CAACV,cAAc,CAACM,GAAG,CAACN,cAAc,CAACW,SAAS,CAAC;EACnE,CAAC;EACDC,SAAS,EAAE;IACTC,SAAS,CAACT,KAAK,EAAEC,KAAK,EAAE;MACtBL,cAAc,CAACc,GAAG,CAACd,cAAc,CAACO,UAAU,EAAEF,KAAK,CAAC;MACpDD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDU,YAAY,CAACX,KAAK,EAAEI,QAAQ,EAAE;MAC5BR,cAAc,CAACc,GAAG,CAACd,cAAc,CAACW,SAAS,EAAEF,IAAI,CAACO,SAAS,CAACR,QAAQ,CAAC,CAAC;MACtEJ,KAAK,CAACI,QAAQ,GAAGA,QAAQ;IAC3B;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,QAAQ,CAACC,OAAO,EAAC;MAACC,IAAI;MAACC,SAAS;MAACC;IAAQ,CAAC,EAAE;MAC1C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCC,WAAW,CAACR,QAAQ,CAAC,IAAI,CAACS,IAAI,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;UAC5CV,OAAO,CAACW,MAAM,CAACjB,SAAS,CAACgB,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC1B,KAAK,CAAC;UAC7C,OAAOqB,WAAW,CAACM,IAAI,EAAE;QAC3B,CAAC,CAAC,CAACJ,IAAI,CAAEK,QAAQ,IAAK;UACpB,IAAI,CAAClB,YAAY,CAACkB,QAAQ,CAACF,IAAI,CAACA,IAAI,CAACJ,IAAI,CAAC;UAC1C,IAAI,CAACO,OAAO,CAACC,OAAO,CAAC;YAAEf,IAAI,EAAE;UAAO,CAAC,CAAC;QACxC,CAAC,CAAC,CAACgB,KAAK,CAAEC,KAAK,IAAK;UAClBZ,MAAM,CAACY,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF;AACF,CAAC;AAED,eAAe;EACb,GAAGnC;AACL,CAAC"},"metadata":{},"sourceType":"module"}