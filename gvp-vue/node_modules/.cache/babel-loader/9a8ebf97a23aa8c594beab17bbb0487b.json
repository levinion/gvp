{"ast":null,"code":"import storageService from '@/service/storageService';\nimport axios from 'axios';\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_URL,\n  timeout: 1000 * 5\n});\nservice.interceptors.request.use(config => {\n  Object.assign(config.headers, {\n    Authorization: `Bearer ${local}`\n  });\n  return config;\n}, error => Promise.reject(error));\nexport default service;","map":{"version":3,"names":["storageService","axios","service","create","baseURL","process","env","VUE_APP_BASE_URL","timeout","interceptors","request","use","config","Object","assign","headers","Authorization","local","error","Promise","reject"],"sources":["/home/maruka/Projects/go-web/gvp-f/src/utils/request.js"],"sourcesContent":["import storageService from '@/service/storageService';\nimport axios from 'axios';\n\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_URL,\n  timeout: 1000 * 5,\n});\n\nservice.interceptors.request.use((config) => {\n  Object.assign(config.headers, { Authorization: `Bearer ${local}` });\n  return config;\n}, (error) => Promise.reject(error));\n\nexport default service;\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,0BAA0B;AACrD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB;EACrCC,OAAO,EAAE,IAAI,GAAG;AAClB,CAAC,CAAC;AAEFN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC3CC,MAAM,CAACC,MAAM,CAACF,MAAM,CAACG,OAAO,EAAE;IAAEC,aAAa,EAAG,UAASC,KAAM;EAAE,CAAC,CAAC;EACnE,OAAOL,MAAM;AACf,CAAC,EAAGM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC;AAEpC,eAAehB,OAAO"},"metadata":{},"sourceType":"module"}